{"version":3,"sources":["App.js","components/AddTask.js","components/OldTask.js","components/UpcomingTask.js","components/conference.js","services/local.service.ts","services/Routes.js","serviceWorker.js","index.js"],"names":["App","props","children","style","liBorder","border","width","padding","margin","borderRadius","listStyleType","ulBorder","marginLeft","inputBox","fontSize","paddingVertical","marginBottom","button","color","fontWeight","float","cursor","zIndex","span","high","background","AddTodoList","prop","useState","_addTask","addTask","_addTime","addTime","_prior","updatePro","onSubmit","e","preventDefault","trim","toString","method","action","type","value","placeholder","onChange","target","name","marginTop","OldTask","_data","data","reverse","map","v","i","key","className","priorty","text","time","UpcomingTask","_localStorageService","_updateTime","getTasksFromLocal","_localTask","localStorage","getItem","JSON","stringify","parse","setTasksInLocal","task","setItem","getCurrentTask","_task","filter","a","Date","toLocaleTimeString","hour12","hour","minute","Conference","sort","b","_todoList","updatelist","_currentTask","updateCurrentTask","length","_oldTask","updateOldTask","UpdateTasks","_newTask","pro","tim","title","onClick","deleteTask","Routes","path","exact","component","Boolean","window","location","hostname","match","Root","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.372a2e61.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <this.props.children />\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react';\nexport function AddTodoList(prop) {\n    const [_addTask, addTask] = useState(\"\");\n    const [_addTime, addTime] = useState(\"\");\n    const [_prior, updatePro] = useState(\"high\");\n\n\n    const handleSubmit =(e) => {\n        e.preventDefault();\n        if(_addTask.trim() && _addTime.trim()){\n            prop.addTask(_addTask, _prior, _addTime.toString())\n            addTask(\"\");\n            addTime(\"\");\n        }\n    }\n\n\n    return(\n        <form onSubmit={handleSubmit} method=\"get\" action=\"#\">\n            <input type=\"text\" value={_addTask} style={style.inputBox} placeholder=\"Enter the task...\" onChange = {\n                e => {\n                    addTask(e.target.value)\n                }\n            }/> &nbsp;\n            <label>Enter time</label>\n            &nbsp;\n            <input type=\"time\" value={_addTime} style={style.inputBox}  onChange = {\n                e => {\n                    addTime(e.target.value)\n                }\n            }/>\n            <br/>\n            <input type=\"radio\" name=\"priority\" onChange = {e => updatePro(\"high\")}/> High &nbsp; \n            <input type=\"radio\" name=\"priority\" onChange = {e => updatePro(\"modrate\")}/> Modrate &nbsp; \n            <input type=\"radio\" name=\"priority\" onChange = {e => updatePro(\"low\")}/> Low &nbsp;\n            <input type=\"submit\" style={style.button}  />\n        </form>\n    )\n}\nconst style = {\n    liBorder:{\n        border: \"1px solid black\",\n        width: \"80%\",\n        padding: \"10px 7px\",\n        margin: \"10px 7px\",\n        borderRadius:5,\n        listStyleType: \"none\"\n    },\n    ulBorder:{\n        border: \"1px solid black\",\n        width: \"50%\",\n        padding: \"10px 7px\",\n        marginLeft: \"30px\",\n        listStyleType: \"none\"\n    },\n    inputBox:{\n        width: \"35%\",\n        border: \"none\",\n        fontSize: \"14px\",\n        paddingVertical: \"-5px\",\n        marginBottom:10\n    },\n    button:{\n        color: \"white\",\n        \"padding\": \"4px 3px\",\n        \"background\": \"blue\",\n        fontSize:11,\n        fontWeight:600,\n        borderRadius: 5,\n        float:\"right\",\n        cursor:\"pointer\",\n        zIndex:1000\n    },\n    span:{\n        float:\"right\",\n        border:\"1px solid black\",\n        padding: \"1px 3px\",\n        cursor:\"pointer\",\n        borderRadius:50\n    },\n    high:{\n        background:\"red\"\n    }\n}\n\n\nexport default AddTodoList;","import React from 'react';\nexport function OldTask(prop) {\n    const _data = prop.data.reverse()\n    return(\n        <div>\n            {\n                _data.map((v,i) => {\n                    return(\n                        <li key={i} style={style.liBorder} className={v.priorty}>{i+1}. &nbsp; {v.text} @ {v.time}\n                        </li>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nconst style = {\n    liBorder:{\n        border: \"1px solid black\",\n        width: \"97%\",\n        padding: \"10px 7px\",\n        margin: \"10px 7px\",\n        borderRadius:5,\n        listStyleType: \"none\"\n    },\n    ulBorder:{\n        border: \"1px solid black\",\n        width: \"90%\",\n        padding: \"10px 7px\",\n        marginLeft: \"30px\",\n        listStyleType: \"none\"\n    },\n    inputBox:{\n        width: \"35%\",\n        border: \"none\",\n        fontSize: \"14px\",\n        paddingVertical: \"-5px\",\n        marginBottom:10\n    },\n    button:{\n        color: \"white\",\n        \"padding\": \"10px 7px\",\n        \"background\": \"blue\",\n        fontSize:20,\n        fontWeight:600,\n        borderRadius: 5,\n        float:\"right\",\n        marginTop:\"-27px\",\n        cursor:\"pointer\"\n    },\n    span:{\n        float:\"right\",\n        border:\"1px solid black\",\n        padding: \"1px 3px\",\n        cursor:\"pointer\",\n        borderRadius:50\n    },\n    high:{\n        background:\"red\"\n    }\n}\n\n\nexport default OldTask","import React  from 'react';\nexport function UpcomingTask(prop) {\n    return(\n        <div>\n            {\n                prop.data.map((v,i) => {\n                    return(\n                        <li key={i} style={style.liBorder} className={v.priorty}>{i+1}. &nbsp; {v.text} @ {v.time}\n                        </li>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nconst style = {\n    liBorder:{\n        border: \"1px solid black\",\n        width: \"97%\",\n        padding: \"10px 7px\",\n        margin: \"10px 7px\",\n        borderRadius:5,\n        listStyleType: \"none\"\n    },\n    ulBorder:{\n        border: \"1px solid black\",\n        width: \"90%\",\n        padding: \"10px 7px\",\n        marginLeft: \"30px\",\n        listStyleType: \"none\"\n    },\n    inputBox:{\n        width: \"35%\",\n        border: \"none\",\n        fontSize: \"14px\",\n        paddingVertical: \"-5px\",\n        marginBottom:10\n    },\n    button:{\n        color: \"white\",\n        \"padding\": \"10px 7px\",\n        \"background\": \"blue\",\n        fontSize:20,\n        fontWeight:600,\n        borderRadius: 5,\n        float:\"right\",\n        marginTop:\"-27px\",\n        cursor:\"pointer\"\n    },\n    span:{\n        float:\"right\",\n        border:\"1px solid black\",\n        padding: \"1px 3px\",\n        cursor:\"pointer\",\n        borderRadius:50\n    },\n    high:{\n        background:\"red\"\n    }\n}\n\n\nexport default UpcomingTask","import React ,{ useState, useEffect } from 'react';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AddTodoList from './AddTask'\nimport OldTask from './OldTask'\nimport UpcomingTask from './UpcomingTask'\nimport LocalStorageService from '../services/local.service';\nconst _localStorageService = new LocalStorageService();\n\nexport function Conference(props){\n    let _time = 0;\n    const [_todoList, updatelist] = useState(_localStorageService.getTasksFromLocal().sort((a,b)=>{\n        return Date.parse(\"01/01/2011 \"+a.time) - Date.parse(\"01/01/2011 \"+b.time)\n    }));\n    const [_currentTask, updateCurrentTask] = useState(_localStorageService.getCurrentTask(_todoList,\">\"));\n    _time = _currentTask.length ? _currentTask[0].time : 0;\n    const [_oldTask, updateOldTask] = useState(_localStorageService.getCurrentTask(_todoList,\"<\"))\n    const updateTask = (value, pro, tim) => {\n        const _newTask  = [..._todoList, {text:value, priorty:pro, time:tim}].sort((a,b)=>{\n            return Date.parse(\"01/01/2011 \"+a.time) - Date.parse(\"01/01/2011 \"+b.time)\n        });\n        UpdateTasks(_newTask);\n    }\n\n\n    const deleteTask = (task) => {\n        const _newTask = [..._todoList].filter(\n            v => v.text !== task\n        );\n        UpdateTasks(_newTask);\n    }\n\n    const UpdateTasks = (_newTask) => {\n        updatelist(_newTask);\n        _localStorageService.setTasksInLocal(_newTask);\n        updateOldTask(_localStorageService.getCurrentTask(_newTask, \"<\"))\n        updateCurrentTask(_localStorageService.getCurrentTask(_newTask, \">\"))\n        _time = _currentTask.length ? _currentTask[0].time : 0;\n    }\n\n    // setInterval(() => {\n    //     if(!_time) return;\n    //     if(Date.parse(\"01/01/2011 \"+_time) <= Date.parse(\"01/01/2011 \"+new Date().toLocaleTimeString('en-US', { hour12: false, \n    //         hour: \"numeric\", \n    //         minute: \"numeric\"}))){\n    //         updateTask();\n    //         }\n    // },1000)\n\n   \n\n\n    return(\n        <div >\n        <h4 className=\"justify-center\">Todo-list</h4>\n            <div className=\"row\">\n                <div className = \"col-md-4\">\n                    <li style={style.liBorder}><AddTodoList addTask={updateTask} /></li>\n                </div>\n                <div className = \"col-md-4\">\n                <h4>Current task</h4>\n                    <li className=\"current\" style={style.liBorder}><h4>{_oldTask.length?_oldTask[_oldTask.length - 1].text: \"No task\"} </h4> End on {_currentTask.length?_currentTask[0].time:\n                        _todoList.length? _todoList[0].time : \"\"}</li>\n                </div>\n                <div className = \"col-md-4\">\n                <h4>Next task</h4>\n                    <li className=\"next\" style={style.liBorder}><h4>{_currentTask.length?_currentTask[0].text:_todoList.length?_todoList[0].text:\"\"} </h4>starts from {_currentTask.length?_currentTask[0].time:\n                        _todoList.length?_todoList[0].time:\"\"}</li>\n                </div>\n            </div> \n            <div className=\"row\">\n                <div className = \"col-md-4\">\n                <h4>All Tasks</h4>\n                    \n                    {\n                        _todoList.map((value,i) => {\n                            return(\n                                <li key={i} style={style.liBorder} className={value.priorty}>{i+1}. &nbsp; {value.text} @ {value.time}\n                                    <span style={style.span} title=\"delete task\" onClick= {v => {deleteTask(value.text)}}>x</span>\n                                </li>\n                            )\n                        })\n                    }\n                    \n                </div>\n                <div className=\"col-md-4\">\n                    <h4>Not Complete Tasks</h4>\n                    <UpcomingTask data={_currentTask} />\n                </div>\n                <div className=\"col-md-4\">\n                    <h4>Previous Tasks </h4>\n                    <OldTask data={_oldTask}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nconst style = {\n    liBorder:{\n        border: \"1px solid black\",\n        width: \"97%\",\n        padding: \"10px 7px\",\n        margin: \"10px 7px\",\n        borderRadius:5,\n        listStyleType: \"none\"\n    },\n    ulBorder:{\n        width: \"90%\",\n        padding: \"10px 7px\",\n        marginLeft: \"30px\",\n        listStyleType: \"none\"\n    },\n    inputBox:{\n        width: \"35%\",\n        border: \"none\",\n        fontSize: \"14px\",\n        paddingVertical: \"-5px\",\n        marginBottom:10\n    },\n    button:{\n        color: \"white\",\n        \"padding\": \"10px 7px\",\n        \"background\": \"blue\",\n        fontSize:20,\n        fontWeight:600,\n        borderRadius: 5,\n        float:\"right\",\n        marginTop:\"-27px\",\n        cursor:\"pointer\"\n    },\n    span:{\n        float:\"right\",\n        border:\"1px solid black\",\n        padding: \"1px 3px\",\n        cursor:\"pointer\",\n        borderRadius:50\n    },\n    high:{\n        background:\"red\"\n    }\n}\n\n\nexport default Conference\n","import { promised } from \"q\";\n\nexport class LocalStorageService{\n    _updateTime: any;\n    getTasksFromLocal = (): any => {\n        let _localTask = localStorage.getItem('tasks') \n        if(_localTask == null){\n            _localTask = JSON.stringify([]);\n        }\n        return JSON.parse(_localTask);\n    }\n\n    setTasksInLocal = (task: any): any => {\n        localStorage.setItem(\"tasks\", JSON.stringify(task));\n            \n    }\n\n    getCurrentTask = (_data: any, _task: string): any => {\n        return _data.filter((a: any) =>\n            _task == \">\" ? \n            Date.parse(\"01/01/2011 \"+a.time) > Date.parse(\"01/01/2011 \"+new Date().toLocaleTimeString('en-US', { hour12: false, \n                hour: \"numeric\", \n                minute: \"numeric\"})) : Date.parse(\"01/01/2011 \"+a.time) < Date.parse(\"01/01/2011 \"+new Date().toLocaleTimeString('en-US', { hour12: false, \n                    hour: \"numeric\", \n                    minute: \"numeric\"}))\n        )\n    }\n}\n\nexport default LocalStorageService","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport App from \"../App\";\nimport Conference from \"../components/conference.js\";\n\nexport function Routes() {\n        return(\n            <BrowserRouter>\n                <div>\n                    <Route path=\"/\" exact component={App}>\n                        <Route path=\"/\" exact component={Conference}></Route>\n                        <Route path=\"/conference\" component={Conference}></Route>\n                    </Route>\n                </div>\n            </BrowserRouter>\n        );\n    }\n\nexport default Routes;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }else{\n    console.log(\"wont register sw. current env:\",process.env.NODE_ENV);\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"sw is registered\");\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './services/Routes';\nimport * as serviceWorker from './serviceWorker';\n\nclass Root extends React.Component{\n    render(){\n        return(\n            <Routes />\n        )\n    }\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}